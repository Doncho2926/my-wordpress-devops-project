version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: "{{ project_name }}_db"
    restart: always
    environment:
      MYSQL_DATABASE: wp
      MYSQL_USER: wp
      MYSQL_PASSWORD: StrongDBpass!
      MYSQL_ROOT_PASSWORD: StrongDBpass!
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -pStrongDBpass! --silent"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - wp_net

  wordpress:
    image: my-wordpress:php8.2-fpm
    container_name: "{{ project_name }}_wordpress"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wp
      WORDPRESS_DB_USER: wp
      WORDPRESS_DB_PASSWORD: StrongDBpass!
    volumes:
      - wordpress_data:/var/www/html
      - ./wp-config.php:/var/www/html/wp-config.php
    networks:
      - wp_net

  # ✅ Custom Nginx (с реални файлове за логове)
  nginx:
    build:
      context: .
      dockerfile: roles/wp_stack/files/Dockerfile.nginx   # <-- пълен път до нашия файл
    container_name: "{{ project_name }}_nginx"
    depends_on:
      - wordpress
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx-logs:/var/log/nginx               # <-- реални файлове
      - wordpress_data:/var/www/html:ro
    networks:
      - wp_net

  prometheus:
    image: prom/prometheus:latest
    container_name: "{{ project_name }}_prometheus"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - wp_net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: "{{ project_name }}_cadvisor"
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - wp_net

  grafana:
    image: grafana/grafana:latest
    container_name: "{{ project_name }}_grafana"
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - wp_net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: "{{ project_name }}_elasticsearch"
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200 >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - wp_net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.0
    container_name: "{{ project_name }}_logstash"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./nginx-logs:/var/log/nginx:ro           # <-- чете реалните логове
    ports:
      - "9600:9600"
    networks:
      - wp_net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: "{{ project_name }}_kibana"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    ports:
      - "5601:5601"
    networks:
      - wp_net

volumes:
  db_data:
  wordpress_data:
  nginx_logs:
  es_data:

networks:
  wp_net:
