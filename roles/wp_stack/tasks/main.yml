---
# WordPress DevOps Stack - Main Ansible Tasks

# 1. Ensure the target project directory exists
- name: Ensure project directory exists
  ansible.builtin.file:
    path: "{{ project_dir }}"
    state: directory
    mode: '0755'

# 2. Clone project from GitHub (if repository is provided)
- name: Clone project from GitHub (if provided)
  ansible.builtin.git:
    repo: "{{ github_repo_url | default('', true) }}"
    dest: "{{ project_dir }}"
    version: main
    force: yes
  when: github_repo_url is defined and github_repo_url != ""

# 3. Copy docker-compose and nginx templates
- name: Copy docker-compose and nginx templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: "docker-compose.yml.j2", dest: "{{ project_dir }}/docker-compose.yml" }
    - { src: "nginx.conf.j2", dest: "{{ project_dir }}/nginx.conf" }

# 4. Generate wp-config.php from template
- name: Generate wp-config.php from template
  ansible.builtin.template:
    src: "wp-config.php.j2"
    dest: "{{ project_dir }}/wp-config.php"
    mode: "0644"

# 5. Copy Logstash pipeline configuration (if available)
- name: Copy Logstash pipeline configuration
  ansible.builtin.copy:
    src: "logstash.conf"
    dest: "{{ project_dir }}/logstash.conf"
    mode: "0644"
  ignore_errors: true

# 6. Increase vm.max_map_count for Elasticsearch
- name: Increase vm.max_map_count for Elasticsearch
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: "262144"
    sysctl_set: true
    state: present
    reload: true
  become: true
  ignore_errors: true

# 7. Copy role files to project directory (for CI/CD runners)
- name: Copy role files to project directory
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ project_dir }}/"
    mode: "0644"
  with_items:
    - "Dockerfile"
    - "php.ini"
    - "prometheus.yml"
  ignore_errors: true

# 8. Build custom WordPress image with PHP extensions
- name: Build custom WordPress image with PHP extensions
  ansible.builtin.command:
    cmd: docker build -t my-wordpress:php8.2-fpm .
  args:
    chdir: "{{ project_dir }}"
  register: docker_build
  failed_when: docker_build.rc != 0 and 'No such file or directory' not in docker_build.msg
  ignore_errors: true

# 9. Start containers with Docker Compose (rebuild)
- name: Start containers with Docker Compose (rebuild)
  ansible.builtin.command:
    cmd: docker compose -f /opt/wordpress/docker-compose.yml up -d --build
  args:
    chdir: "{{ project_dir }}"
  ignore_errors: true

# 10. Wait for MySQL to become healthy
- name: Wait for MySQL to become healthy
  ansible.builtin.shel
