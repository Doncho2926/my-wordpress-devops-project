---
# WordPress DevOps Stack ‚Äî stable version (CI + local)

# 1Ô∏è‚É£ –£–≤–µ—Ä–∏ —Å–µ, —á–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞ –∑–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
- name: Ensure project directory exists
  ansible.builtin.file:
    path: "{{ project_dir }}"
    state: directory
    mode: '0755'

# 2Ô∏è‚É£ (–ü–æ –∏–∑–±–æ—Ä) –ö–ª–æ–Ω–∏—Ä–∞–π –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ –ø—Ä–æ–º–µ–Ω–∏ –æ—Ç GitHub
- name: Clone or update GitHub repository (optional)
  ansible.builtin.git:
    repo: "{{ github_repo_url }}"
    dest: "{{ project_dir }}"
    version: main
    force: yes
  when: github_repo_url is defined and github_repo_url != ""

# 3Ô∏è‚É£ –ö–æ–ø–∏—Ä–∞–π —Å—Ç–∞—Ç–∏—á–Ω–∏—Ç–µ —Ñ–∞–π–ª–æ–≤–µ (Dockerfile, php.ini, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
- name: Copy static files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ project_dir }}/{{ item }}"
    mode: "0644"
  loop:
    - "Dockerfile"
    - "php.ini"
    - "prometheus.yml"
    - "logstash.conf"

# 4Ô∏è‚É£ –ö–æ–ø–∏—Ä–∞–π —à–∞–±–ª–æ–Ω–∏—Ç–µ –∑–∞ docker-compose –∏ nginx
- name: Copy docker-compose and nginx templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: "docker-compose.yml.j2", dest: "{{ project_dir }}/docker-compose.yml" }
    - { src: "nginx.conf.j2", dest: "{{ project_dir }}/nginx.conf" }

# 5Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä–∞–π wp-config.php
- name: Generate wp-config.php
  ansible.builtin.template:
    src: "wp-config.php.j2"
    dest: "{{ project_dir }}/wp-config.php"
    mode: "0644"

# 6Ô∏è‚É£ –£–≤–µ–ª–∏—á–∏ vm.max_map_count (–∑–∞ Elasticsearch)
- name: Increase vm.max_map_count for Elasticsearch
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: "262144"
    sysctl_set: true
    state: present
    reload: true
  become: true
  ignore_errors: true

# 7Ô∏è‚É£ –ü–æ–∫–∞–∂–∏ —Ç–µ–∫—É—â–∞—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
- name: Show project_dir path
  ansible.builtin.debug:
    msg: "Project directory path is: {{ project_dir }}"

# 8Ô∏è‚É£ –ë–∏–ª–¥–Ω–∏ custom WordPress image
- name: Build custom WordPress image with PHP extensions
  ansible.builtin.command:
    cmd: docker build -t my-wordpress:php8.2-fpm .
  args:
    chdir: "{{ project_dir }}"
  register: docker_build
  failed_when: docker_build.rc != 0
  check_mode: no

# 9Ô∏è‚É£ –°—Ç–∞—Ä—Ç–∏—Ä–∞–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ
- name: Start containers with Docker Compose (continue even if some services fail)
  ansible.builtin.command:
    cmd: docker compose -f {{ project_dir }}/docker-compose.yml up -d --build
  args:
    chdir: "{{ project_dir }}"
  register: compose_up
  failed_when: false      # ‚úÖ –Ω–µ fail-–≤–∞ playbook-–∞ –ø—Ä–∏ non-zero exit
  changed_when: true
  check_mode: no

# üîü –ü–æ–∫–∞–∂–∏ Docker Compose stderr (–∞–∫–æ –∏–º–∞)
- name: Show Docker Compose output
  ansible.builtin.debug:
    msg: "{{ compose_up.stderr_lines | default([]) }}"
  check_mode: no

# 1Ô∏è‚É£1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∏ –∫–æ–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ —Ä–∞–±–æ—Ç—è—Ç
- name: Check running containers
  ansible.builtin.command: >
    docker ps --format "table {{'{{'}}.Names{{'}}'}}\t{{'{{'}}.Status{{'}}'}}\t{{'{{'}}.Ports{{'}}'}}"
  register: docker_ps
  changed_when: false
  check_mode: no

# 1Ô∏è‚É£2Ô∏è‚É£ –ü–æ–∫–∞–∂–∏ health summary
- name: Print container health summary
  ansible.builtin.debug:
    msg: "{{ docker_ps.stdout_lines }}"
  check_mode: no

# 1Ô∏è‚É£3Ô∏è‚É£ (–ü–æ –∏–∑–±–æ—Ä) –ò–∑—á–∞–∫–∞–π MySQL –¥–∞ —Å—Ç–∞–Ω–µ healthy ‚Äî —Å–∞–º–æ –ª–æ–∫–∞–ª–Ω–æ
- name: Wait for MySQL to become healthy
  ansible.builtin.shell: |
    docker inspect --format='{{"{{.State.Health.Status}}"}}' {{ project_name }}_db
  register: db_health
  until: db_health.stdout == "healthy"
  retries: 30
  delay: 5
  ignore_errors: true
  when: ansible_env.GITHUB_ACTIONS is not defined

# 1Ô∏è‚É£4Ô∏è‚É£ –§–∏–Ω–∞–ª–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ
- name: Deployment completed
  ansible.builtin.debug:
    msg: "‚úÖ WordPress stack deployed successfully. Visit {{ wp_site_url }}."
