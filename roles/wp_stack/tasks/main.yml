---
# WordPress DevOps Stack - стабилна финална версия

# 1️⃣ Увери се, че директорията съществува
- name: Ensure project directory exists
  ansible.builtin.file:
    path: "{{ project_dir }}"
    state: directory
    mode: '0755'

# 2️⃣ Копирай нужните файлове (Dockerfile, php.ini и др.)
- name: Copy static files to project directory
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ project_dir }}/"
    mode: "0644"
  loop:
    - "Dockerfile"
    - "php.ini"
    - "prometheus.yml"
    - "logstash.conf"

# 3️⃣ Копирай шаблоните docker-compose и nginx
- name: Copy docker-compose and nginx templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: "docker-compose.yml.j2", dest: "{{ project_dir }}/docker-compose.yml" }
    - { src: "nginx.conf.j2", dest: "{{ project_dir }}/nginx.conf" }

# 4️⃣ Генерирай wp-config.php
- name: Generate wp-config.php from template
  ansible.builtin.template:
    src: "wp-config.php.j2"
    dest: "{{ project_dir }}/wp-config.php"
    mode: "0644"

# 5️⃣ Провери дали директорията наистина съществува
- name: Verify project directory exists
  ansible.builtin.stat:
    path: "{{ project_dir }}"
  register: dir_check

- name: Fail if directory missing
  ansible.builtin.fail:
    msg: "❌ Project directory {{ project_dir }} does not exist!"
  when: not dir_check.stat.exists

# 6️⃣ Настрой vm.max_map_count (за Elasticsearch)
- name: Increase vm.max_map_count for Elasticsearch
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: "262144"
    sysctl_set: true
    state: present
    reload: true
  become: true
  ignore_errors: true

# 7️⃣ Build custom WordPress image
- name: Build custom WordPress image with PHP extensions
  ansible.builtin.command:
    cmd: docker build -t my-wordpress:php8.2-fpm .
  args:
    chdir: "{{ project_dir }}"
  register: docker_build
  failed_when: docker_build.rc != 0

# 8️⃣ Стартирай контейнерите
- name: Start containers with Docker Compose (rebuild)
  ansible.builtin.command:
    cmd: docker compose -f {{ project_dir }}/docker-compose.yml up -d --build
  args:
    chdir: "{{ project_dir }}"
  register: compose_up
  failed_when: compose_up.rc != 0
