---
# WordPress DevOps Stack — stable & CI-compatible

- name: Ensure project directory exists
  ansible.builtin.file:
    path: "{{ project_dir }}"
    state: directory
    mode: "0755"

- name: Clone or update GitHub repository
  ansible.builtin.git:
    repo: "{{ github_repo_url }}"
    dest: "{{ project_dir }}"
    version: main
    force: yes
  when: github_repo_url is defined and github_repo_url != ""

- name: Copy static files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ project_dir }}/{{ item }}"
    mode: "0644"
  loop:
    - "Dockerfile"
    - "php.ini"
    - "prometheus.yml"
    - "logstash.conf"

- name: Copy templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: "docker-compose.yml.j2", dest: "{{ project_dir }}/docker-compose.yml" }
    - { src: "nginx.conf.j2", dest: "{{ project_dir }}/nginx.conf" }
    - { src: "wp-config.php.j2", dest: "{{ project_dir }}/wp-config.php" }

- name: Debug project_dir path
  ansible.builtin.debug:
    msg: "Project directory path is: {{ project_dir }}"

- name: Set vm.max_map_count for Elasticsearch
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: "262144"
    sysctl_set: true
    state: present
    reload: true
  become: true
  ignore_errors: true

- name: Build custom WordPress image
  ansible.builtin.command:
    cmd: docker build -t my-wordpress:php8.2-fpm .
  args:
    chdir: "{{ project_dir }}"
  register: docker_build
  failed_when: docker_build.rc != 0
  check_mode: no  # ✅ build трябва винаги да се изпълнява дори при dry-run

- name: Start containers with Docker Compose
  ansible.builtin.command:
    cmd: docker compose -f {{ project_dir }}/docker-compose.yml up -d --build
  args:
    chdir: "{{ project_dir }}"
  register: compose_up
  failed_when: compose_up.rc != 0
  check_mode: no  # ✅ изпълнява се реално, дори в CI check mode

- name: Wait for MySQL to become healthy
  ansible.builtin.shell: |
    docker inspect --format='{{"{{.State.Health.Status}}"}}' {{ project_name }}_db
  register: db_health
  until: db_health.stdout == "healthy"
  retries: 30
  delay: 5
  check_mode: no  # ✅ задължително за GitHub Actions

- name: Show container status
  ansible.builtin.command: docker ps -a
  register: docker_status
  changed_when: false
  check_mode: no

- name: Print container status
  ansible.builtin.debug:
    msg: "{{ docker_status.stdout_lines }}"
  check_mode: no
